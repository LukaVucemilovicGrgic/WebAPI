using Program.WebApi.Controllers;
using Program.WebApi.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Http;
using System.Web.UI.WebControls;

namespace Program.WebApi.Controllers
{
 
    public class PlayerController : ApiController
    {
        public static List<FootballPlayer> players = new List<FootballPlayer>
        {
            new FootballPlayer { Name = "Luka Lukic", Number = 1, Position = "goalkeeper", YearsInContract = 1, Club = "NK Osijek"},
            new FootballPlayer { Name = "Kruno Skoro", Number = 4, Position = "forward", YearsInContract = 4, Club = "NK Varazdin"},
            new FootballPlayer { Name = "Pero Peric", Number = 7, Position = "midfield", YearsInContract = 2, Club = "NK Hajduk"},
            new FootballPlayer { Name = "Bruno Bukic", Number = 5, Position = "defense", YearsInContract = 2, Club = "NK Dinamo"},
            new FootballPlayer { Name = "Matej Jukic", Number = 8, Position = "defense", YearsInContract = 1, Club = "NK Rijeka"}
        };

        // GET api/players/5
        [HttpGet]
        public IEnumerable<FootballPlayer> Get(int number)
        {
            return players.Where(player => player.Number == number);
        }
        // GET api/players
        //public IEnumerable<FootballPlayer> Get()
        //{
        //    return players;
        //}


        // POST api/players
        public IHttpActionResult Post([FromBody] FootballPlayer footballPlayer)
        {
            var newPlayer = new FootballPlayer { Name = "Branimir Tokic", Number = 17, Position = "goalkeeper", YearsInContract = 5, Club = "NK Osijek" };
            players.Add(newPlayer);
            return CreatedAtRoute("DefaultApi", new { number = newPlayer.Number }, newPlayer);

        }

        // PUT api/players/5
        public List<FootballPlayer> Put(int number, [FromBody] FootballPlayer updatedPlayer)
        {
            var playerToUpdate = players.FirstOrDefault(p => p.Number == number);
            if (playerToUpdate != null)
            {
                playerToUpdate.Name = updatedPlayer.Name;
                playerToUpdate.Position = updatedPlayer.Position;
                playerToUpdate.YearsInContract = updatedPlayer.YearsInContract;
                playerToUpdate.Club = updatedPlayer.Club;
            }
            return players;
        }

        // DELETE api/players/5
        public List<FootballPlayer> Delete(int number)
        {
            var playerToDelete = players.FirstOrDefault(p => p.Number == number);
            if (playerToDelete != null)
            {
                players.Remove(playerToDelete);
            }
            return players;
        }
    }
}